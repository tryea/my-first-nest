var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.179,1,2.149]],["body/controllers/AppController.html",[0,1.798,1,3.277,2,1.401,3,0.376,4,0.287,5,0.331,6,3.275,7,0.577,8,1.546,9,4.898,10,5.836,11,1.942,12,0.029,13,1.049,14,3.902,15,1.546,16,2.096,17,3.902,18,3.902,19,0.543,20,0.691,21,2.979,22,3.275,23,0.376,24,0.017,25,2.307,26,3.275,27,1.546,28,5.009,29,3.902,30,0.022,31,0.022]],["title/modules/AppModule.html",[32,1.014,33,2.149]],["body/modules/AppModule.html",[1,3.157,2,1.5,3,0.287,4,0.219,5,0.252,12,0.03,19,0.669,20,0.528,21,3.075,22,2.5,23,0.287,24,0.013,30,0.018,31,0.018,32,1.489,33,4.22,34,1.249,35,1.249,36,1.47,37,1.47,38,1.249,39,2.192,40,1.47,41,2.5,42,2.5,43,2.5,44,3.376,45,3.376,46,2.593,47,3.376,48,3.376,49,2.062,50,1.47,51,1.47,52,2.979,53,2.734,54,2.979,55,2.979,56,2.979,57,2.979,58,2.979,59,2.979,60,2.5,61,2.5,62,2.5,63,2.979,64,2.979,65,2.979,66,2.979,67,2.979,68,2.979]],["title/injectables/AppService.html",[21,1.769,69,0.688]],["body/injectables/AppService.html",[3,0.424,4,0.324,5,0.373,7,0.651,8,1.668,9,5.116,12,0.029,13,0.922,15,1.359,16,1.94,19,0.478,20,0.78,21,2.91,23,0.424,24,0.019,27,1.359,30,0.024,31,0.024,69,1.132,70,1.846,71,3.695,72,4.403,73,4.403,74,3.695]],["title/controllers/AuthController.html",[0,1.179,75,2.149]],["body/controllers/AuthController.html",[0,0.851,2,0.851,3,0.228,4,0.174,5,0.426,7,0.35,8,1.092,11,1.822,12,0.03,13,0.984,15,1.45,19,0.593,20,0.42,23,0.228,24,0.01,25,1.401,27,1.45,30,0.016,31,0.016,75,2.316,76,1.988,77,1.55,78,2.369,79,2.731,80,3.555,81,2.97,82,3.555,83,2.97,84,2.369,85,4.236,86,2.369,87,2.369,88,1.97,89,1.564,90,0.962,91,1.822,92,4.428,93,2.319,94,1.988,95,2.778,96,2.369,97,2.369,98,2.842,99,2.369,100,2.369,101,2.369,102,1.988,103,2.778,104,2.369,105,2.369,106,1.737,107,1.737,108,3.539,109,1.988,110,3.539,111,2.282,112,1.988,113,1.988,114,1.988,115,1.401,116,2.369,117,2.369,118,1.988,119,1.988,120,3.539,121,2.369,122,2.369,123,2.369,124,2.369,125,2.319,126,2.369,127,2.369,128,2.369,129,2.369,130,2.97,131,2.369,132,2.369,133,1.276,134,2.316,135,2.369,136,2.092,137,2.595,138,2.369,139,2.369,140,2.369,141,2.369,142,2.369,143,2.369,144,2.369,145,2.369,146,2.369,147,2.369,148,2.369,149,1.988,150,2.369,151,2.369,152,2.369]],["title/injectables/AuthGuard.html",[69,0.688,115,1.941]],["body/injectables/AuthGuard.html",[3,0.544,4,0.263,5,0.303,7,0.529,8,1.461,12,0.029,13,0.992,15,1.461,19,0.514,20,0.634,23,0.345,24,0.016,27,1.461,30,0.021,31,0.021,69,0.992,70,1.5,88,1.985,89,1.576,90,0.812,91,1.836,115,3.136,134,3.842,153,3.004,154,3.098,155,4.735,156,4.735,157,4.735,158,4.735,159,5.646,160,3.579,161,3.579,162,4.735,163,3.579,164,5.306,165,4.735,166,3.579,167,2.342,168,3.579,169,3.579,170,2.342,171,1.928]],["title/modules/AuthModule.html",[32,1.014,44,1.941]],["body/modules/AuthModule.html",[2,1.58,3,0.309,4,0.236,5,0.272,12,0.03,19,0.661,20,0.569,23,0.309,24,0.014,30,0.019,31,0.019,32,1.549,34,1.345,35,1.345,36,1.584,37,1.584,38,1.345,39,2.28,40,1.584,44,3.698,46,2.654,49,2.172,50,1.584,51,1.584,53,2.879,75,3.285,111,3.148,112,2.694,134,2.1,167,2.1,172,2.694,173,2.694,174,3.21,175,3.455,176,3.21,177,3.21,178,2.354,179,3.21,180,3.21,181,2.354,182,1.897,183,2.354,184,3.21,185,3.21,186,3.21,187,2.1,188,2.694,189,3.21,190,2.694,191,3.21,192,2.354,193,2.354,194,3.21,195,2.694,196,2.694]],["title/injectables/AuthService.html",[69,0.688,111,1.769]],["body/injectables/AuthService.html",[3,0.158,4,0.12,5,0.139,7,0.242,8,0.819,12,0.03,13,0.948,15,1.531,19,0.517,20,0.29,23,0.158,24,0.007,27,1.304,30,0.012,31,0.012,69,0.556,70,0.686,79,2.495,80,4.421,81,3.547,82,2.226,83,2.807,88,1.897,89,1.652,90,1.027,91,1.754,93,1.898,94,2.226,95,2.273,98,2.437,102,2.226,103,2.273,111,1.429,113,1.373,114,1.373,125,2.449,133,2.566,134,2.96,136,1.977,170,2.516,171,2.071,181,1.2,182,0.967,183,1.2,187,1.735,192,1.2,193,1.2,195,1.373,196,1.373,197,1.373,198,2.652,199,2.652,200,1.429,201,1.2,202,1.747,203,4.764,204,1.637,205,1.945,206,2.652,207,1.637,208,2.652,209,2.652,210,2.226,211,1.637,212,2.652,213,2.675,214,1.637,215,2.652,216,3.117,217,1.637,218,2.652,219,1.637,220,3.344,221,2.453,222,1.2,223,1.2,224,2.652,225,1.637,226,1.373,227,1.945,228,3.099,229,1.637,230,4.524,231,3.846,232,2.273,233,2.652,234,1.637,235,1.637,236,1.637,237,2.652,238,1.637,239,1.373,240,2.652,241,1.637,242,3.344,243,3.344,244,1.637,245,1.637,246,1.373,247,1.2,248,2.652,249,1.637,250,3.344,251,1.637,252,1.637,253,1.637,254,1.637,255,1.637,256,2.652,257,1.2,258,1.637,259,1.637,260,1.651,261,1.637,262,3.846,263,1.071,264,2.652,265,1.637,266,1.637,267,1.373,268,1.637]],["title/classes/CreateSchoolDto.html",[24,0.014,269,1.769]],["body/classes/CreateSchoolDto.html",[3,0.34,4,0.259,5,0.299,7,0.522,11,2.177,12,0.029,13,1.176,16,2.236,19,0.383,23,0.34,24,0.021,30,0.021,31,0.021,90,1.274,91,2.33,232,3.114,269,2.526,270,1.603,271,4.905,272,2.588,273,2.315,274,5.268,275,5.268,276,5.268,277,4.69,278,3.528,279,3.528,280,3.528,281,3.528,282,3.528,283,3.528,284,3.44,285,3.069,286,4.712,287,3.455,288,1.9]],["title/classes/CreateTaskDto.html",[24,0.014,289,1.941]],["body/classes/CreateTaskDto.html",[3,0.362,4,0.276,5,0.318,7,0.555,11,1.894,12,0.029,13,1.138,16,2.065,19,0.407,23,0.362,24,0.022,30,0.022,31,0.022,90,1.233,213,2.888,216,3.554,270,1.705,273,2.411,285,3.554,287,3.211,288,2.022,289,2.888,290,4.827,291,2.754,292,4.558,293,4.558,294,4.1,295,3.151,296,3.151,297,3.151,298,4.218,299,4.827]],["title/injectables/JwtStrategy.html",[69,0.688,175,1.941]],["body/injectables/JwtStrategy.html",[3,0.345,4,0.263,5,0.303,7,0.529,8,1.461,12,0.029,13,0.992,15,1.105,19,0.613,20,0.634,23,0.345,24,0.016,27,1.105,30,0.021,31,0.021,69,0.992,70,1.5,79,2.41,88,1.5,89,1.191,90,0.812,91,1.388,93,1.767,154,3.098,167,2.342,175,2.799,182,2.116,183,2.625,187,3.471,190,3.004,193,2.625,200,2.858,210,3.004,232,2.116,260,1.767,300,3.004,301,4.735,302,4.735,303,3.579,304,4.735,305,3.579,306,3.579,307,3.579,308,3.004,309,3.004,310,3.579,311,3.579,312,3.579,313,3.579,314,3.579,315,3.579,316,3.579,317,3.004,318,3.579]],["title/controllers/LatihanController.html",[0,1.179,319,2.149]],["body/controllers/LatihanController.html",[0,1.401,2,1.401,3,0.376,4,0.287,5,0.331,7,0.577,8,1.546,11,1.513,12,0.029,13,0.817,15,1.204,16,1.798,19,0.543,20,0.691,23,0.376,24,0.017,27,1.204,30,0.022,31,0.022,39,1.772,69,0.817,77,2.553,89,1.299,200,2.102,227,2.862,319,3.277,320,3.275,321,4.204,322,5.836,323,3.902,324,3.143,325,3.275,326,3.902,327,3.902,328,3.902,329,3.902,330,3.275,331,3.902,332,3.275,333,2.862,334,3.902]],["title/modules/LatihanModule.html",[32,1.014,45,1.941]],["body/modules/LatihanModule.html",[2,1.835,3,0.388,4,0.296,5,0.341,12,0.029,19,0.609,20,0.714,23,0.388,24,0.018,30,0.022,31,0.022,32,1.733,34,1.689,35,1.689,36,1.988,37,1.988,38,1.689,39,2.55,40,1.988,45,3.682,49,2.523,50,1.988,51,1.988,319,3.674,324,3.354,325,3.381,335,3.381,336,3.381,337,4.028,338,4.028]],["title/injectables/LatihanService.html",[69,0.688,324,1.769]],["body/injectables/LatihanService.html",[3,0.424,4,0.324,5,0.373,7,0.651,8,1.668,12,0.029,13,0.922,15,1.359,16,1.94,19,0.478,20,0.78,23,0.424,24,0.019,27,1.359,30,0.024,31,0.024,69,1.132,70,1.846,321,3.695,324,2.91,339,3.695,340,6.096,341,4.403,342,4.403]],["title/classes/LoginDto.html",[24,0.014,95,1.941]],["body/classes/LoginDto.html",[3,0.392,4,0.299,5,0.344,7,0.601,11,1.992,12,0.029,13,1.076,16,2.127,19,0.441,23,0.392,24,0.023,30,0.023,31,0.023,90,1.166,95,3.037,232,3.332,257,4.133,270,1.845,273,2.536,284,3.768,285,3.688,287,3.037,288,2.187,343,3.408,344,3.408,345,4.061,346,3.408,347,4.061,348,3.408,349,3.408,350,3.408,351,3.408]],["title/modules/PrismaModule.html",[32,1.014,46,1.492]],["body/modules/PrismaModule.html",[3,0.385,4,0.294,5,0.339,12,0.029,19,0.552,20,0.708,23,0.385,24,0.018,30,0.022,31,0.022,32,1.726,34,1.675,35,1.675,36,1.972,37,1.972,38,1.675,39,2.541,40,2.761,46,2.868,49,2.51,50,1.972,51,1.972,202,2.989,352,3.354,353,3.354,354,3.354,355,3.996,356,3.996]],["title/injectables/PrismaService.html",[69,0.688,202,1.492]],["body/injectables/PrismaService.html",[3,0.357,4,0.272,5,0.313,7,0.547,8,1.493,12,0.029,13,1.014,15,1.493,19,0.525,20,0.655,23,0.357,24,0.016,30,0.021,31,0.021,69,1.014,70,1.551,79,2.817,88,1.551,89,1.231,90,0.84,91,1.434,125,2.388,154,3.166,202,2.197,357,3.104,358,5.392,359,4.838,360,6.088,361,4.838,362,5.719,363,3.699,364,3.104,365,3.699,366,3.104,367,3.699,368,3.699,369,3.699,370,3.699]],["title/classes/RegisterDto.html",[24,0.014,103,1.941]],["body/classes/RegisterDto.html",[3,0.37,4,0.282,5,0.326,7,0.568,11,2.129,12,0.029,13,1.15,16,2.209,19,0.417,23,0.37,24,0.022,30,0.022,31,0.022,89,1.828,90,1.246,103,2.931,232,3.246,257,4.027,270,1.745,273,2.448,284,3.637,285,3.797,287,3.246,288,2.069,294,3.224,344,3.224,346,3.224,348,3.224,349,3.224,350,3.224,351,3.224,371,3.224,372,3.842,373,3.842,374,3.842]],["title/classes/School.html",[24,0.014,375,1.941]],["body/classes/School.html",[3,0.477,4,0.364,5,0.42,12,0.027,23,0.477,24,0.022,30,0.026,31,0.026,270,2.248,375,3.427,376,4.154]],["title/controllers/SchoolController.html",[0,1.179,377,2.149]],["body/controllers/SchoolController.html",[0,0.794,2,0.794,3,0.213,4,0.163,5,0.187,7,0.327,8,1.037,11,1.892,12,0.03,13,1.023,15,1.506,16,2.024,19,0.492,20,0.392,23,0.213,24,0.01,25,1.307,26,1.856,27,1.506,30,0.015,31,0.015,77,1.447,79,2.776,88,1.903,89,1.511,90,1.03,91,1.76,93,2.409,98,2.965,106,2.464,107,2.98,125,2.409,133,2.629,136,2.886,137,3.58,228,1.622,260,2.537,269,2.768,375,3.58,377,2.198,378,1.856,379,2.98,380,3.809,381,2.82,382,2.82,383,3.329,384,1.856,385,2.211,386,2.211,387,1.856,388,2.211,389,2.211,390,1.856,391,2.211,392,2.211,393,1.856,394,3.254,395,2.211,396,2.211,397,1.856,398,2.82,399,2.189,400,1.856,401,1.447,402,2.464,403,1.447,404,2.211,405,2.211,406,2.211,407,2.82,408,2.211,409,1.856,410,1.856,411,2.211,412,2.211,413,1.856,414,1.856,415,2.211,416,1.856,417,2.211,418,2.211]],["title/modules/SchoolModule.html",[32,1.014,47,1.941]],["body/modules/SchoolModule.html",[2,1.763,3,0.365,4,0.278,5,0.321,12,0.029,19,0.626,20,0.67,23,0.365,24,0.017,30,0.022,31,0.022,32,1.682,34,1.586,35,1.586,36,1.867,37,1.867,38,1.586,39,2.476,40,1.867,46,2.782,47,3.737,49,2.423,50,1.867,51,1.867,53,3.213,178,2.775,377,3.567,399,3.299,400,3.175,419,3.175,420,3.783,421,3.175,422,3.783,423,3.783]],["title/injectables/SchoolService.html",[69,0.688,399,1.769]],["body/injectables/SchoolService.html",[3,0.2,4,0.152,5,0.176,7,0.307,8,0.987,12,0.03,13,1.05,15,1.463,19,0.476,20,0.367,23,0.2,24,0.009,25,1.225,27,1.463,30,0.014,31,0.014,69,0.67,70,0.869,79,2.742,88,1.988,89,1.578,90,1.076,91,1.838,93,2.34,98,1.722,125,2.577,133,2.904,170,2.554,171,2.103,200,1.117,201,1.52,202,1.993,205,2.345,213,3.271,221,1.52,222,1.52,223,1.52,246,3.276,247,2.863,260,2.662,269,2.699,375,3.271,379,2.345,380,3.683,381,2.684,382,2.684,383,2.345,384,2.684,387,2.684,390,2.684,393,2.684,394,3.087,399,1.722,401,1.356,402,2.345,403,1.356,407,2.684,424,1.74,425,2.073,426,2.073,427,2.073,428,2.073,429,2.073,430,2.073,431,2.073,432,2.073,433,3.904,434,3.904,435,3.198,436,3.198,437,2.073,438,3.198,439,2.073,440,3.198,441,2.073,442,3.198,443,2.073,444,3.198,445,2.073,446,3.198,447,2.073]],["title/controllers/TaskController.html",[0,1.179,448,2.149]],["body/controllers/TaskController.html",[0,0.709,2,0.709,3,0.19,4,0.145,5,0.167,7,0.292,8,0.95,11,1.797,12,0.03,13,0.971,15,1.431,16,1.958,19,0.533,20,0.35,23,0.19,24,0.009,27,1.431,30,0.014,31,0.014,77,1.292,79,2.716,88,1.792,89,1.423,90,0.97,91,1.658,92,4.966,93,2.288,98,2.763,106,3.891,107,2.258,109,1.657,115,1.167,125,2.288,130,3.89,133,2.497,136,2.74,137,3.135,149,3.177,200,1.063,227,2.258,228,1.448,260,2.752,263,2.797,267,1.657,289,2.527,298,1.448,333,1.448,383,1.448,397,1.657,398,2.584,401,1.292,403,1.292,410,1.657,413,1.657,414,1.657,416,1.657,448,2.015,449,1.657,450,2.584,451,2.584,452,4.275,453,2.584,454,3.177,455,1.974,456,1.974,457,1.974,458,1.657,459,1.974,460,1.974,461,1.974,462,1.974,463,1.657,464,1.974,465,1.974,466,1.657,467,2.527,468,1.974,469,1.974,470,2.039,471,1.657,472,2.584,473,1.974,474,1.657,475,1.974,476,1.974,477,1.974,478,1.974,479,1.657,480,1.657,481,1.974,482,1.974,483,1.657,484,1.974,485,1.974,486,3.079,487,1.974,488,1.974,489,3.648,490,1.657,491,1.974,492,1.974,493,1.974,494,1.974,495,1.974,496,1.974,497,1.974]],["title/modules/TaskModule.html",[32,1.014,48,1.941]],["body/modules/TaskModule.html",[2,1.763,3,0.365,4,0.278,5,0.321,12,0.029,19,0.626,20,0.67,23,0.365,24,0.017,30,0.022,31,0.022,32,1.682,34,1.586,35,1.586,36,1.867,37,1.867,38,1.586,39,2.476,40,1.867,46,2.782,48,3.737,49,2.423,50,1.867,51,1.867,53,3.213,178,2.775,448,3.567,470,3.299,471,3.175,498,3.175,499,3.175,500,3.783,501,3.783,502,3.783]],["title/injectables/TaskService.html",[69,0.688,470,1.769]],["body/injectables/TaskService.html",[3,0.189,4,0.144,5,0.166,7,0.29,8,0.944,12,0.03,13,1.025,15,1.425,19,0.462,20,0.347,23,0.189,24,0.009,25,1.158,27,1.425,30,0.013,31,0.013,69,0.641,70,0.821,79,2.711,88,2.052,89,1.629,90,1.111,91,1.898,93,2.279,98,2.755,125,2.524,133,2.637,136,2.226,170,2.464,171,2.028,200,1.055,201,1.436,202,1.934,205,2.244,213,3.617,216,3.64,221,3.122,222,1.436,223,1.436,247,2.762,260,2.797,289,2.517,401,1.282,403,1.282,450,2.568,451,2.568,453,2.568,454,2.568,458,2.568,463,2.568,466,2.568,467,2.517,470,1.648,472,2.568,489,3.64,490,2.568,503,1.644,504,3.06,505,1.959,506,3.06,507,1.959,508,1.959,509,3.06,510,1.959,511,1.959,512,1.959,513,1.959,514,1.959,515,3.766,516,3.766,517,3.766,518,3.06,519,3.06,520,1.959,521,1.959,522,3.06,523,1.959,524,3.06,525,1.959]],["title/classes/UpdateSchoolDto.html",[24,0.014,394,1.941]],["body/classes/UpdateSchoolDto.html",[3,0.44,4,0.336,5,0.387,12,0.029,19,0.599,23,0.44,24,0.02,30,0.024,31,0.024,154,3.614,269,2.458,270,2.073,272,3.347,379,3.347,394,3.265,402,3.347,526,3.831,527,5.523,528,4.564,529,3.831,530,3.831]],["title/classes/UpdateTaskDto.html",[24,0.014,467,1.941]],["body/classes/UpdateTaskDto.html",[3,0.362,4,0.276,5,0.318,7,0.555,11,1.894,12,0.029,13,1.138,16,2.065,19,0.407,23,0.362,24,0.022,30,0.022,31,0.022,90,1.233,213,2.888,216,3.554,270,1.705,273,2.411,286,4.558,287,3.211,288,2.022,291,2.754,292,4.558,293,4.558,295,3.151,296,3.151,297,3.151,298,4.218,299,4.827,467,2.888,531,4.827,532,4.886]],["title/coverage.html",[533,3.278]],["body/coverage.html",[0,1.96,1,1.904,5,0.247,6,2.442,12,0.029,21,1.567,24,0.026,30,0.018,31,0.018,38,1.22,69,1.246,71,2.442,75,1.904,76,2.442,90,0.66,95,1.72,103,1.72,111,1.567,115,1.72,153,2.442,171,1.567,175,1.72,182,1.72,197,2.442,202,1.321,263,1.904,269,1.567,271,2.442,272,3.013,289,1.72,290,2.442,291,3.013,300,2.442,319,1.904,320,2.442,324,1.567,339,2.442,343,2.442,357,2.442,371,2.442,375,1.72,376,2.442,377,1.904,378,2.442,394,1.72,399,1.567,424,2.442,448,1.904,449,2.442,467,1.72,470,1.567,483,2.442,503,2.442,526,2.442,531,2.442,533,2.134,534,2.909,535,2.909,536,2.909,537,6.573,538,5.46,539,4.764,540,4.109,541,2.909,542,2.909,543,4.764,544,2.442,545,4.109,546,5.46,547,2.442,548,4.109,549,4.109,550,2.134,551,2.909,552,2.909]],["title/dependencies.html",[35,1.654,553,2.307]],["body/dependencies.html",[12,0.03,20,0.723,24,0.023,30,0.023,31,0.023,35,1.709,60,3.422,61,3.422,118,3.422,119,3.422,167,2.668,181,2.991,187,2.668,226,3.422,288,2.196,309,4.323,366,3.422,474,3.422,529,3.422,530,3.422,554,5.647,555,4.078,556,4.078,557,5.151,558,4.078,559,4.078,560,4.078,561,4.078,562,4.078,563,4.078,564,4.078,565,4.078,566,4.078,567,4.078,568,4.078]],["title/miscellaneous/functions.html",[569,1.481,570,3.312]],["body/miscellaneous/functions.html",[7,0.739,12,0.026,30,0.026,31,0.026,38,2.587,547,4.196,569,2.693,570,4.196,571,5]],["title/index.html",[7,0.407,572,2.749,573,2.749]],["body/index.html",[4,0.256,12,0.029,30,0.02,31,0.02,62,2.92,333,2.551,364,2.92,533,2.551,574,3.479,575,3.479,576,4.646,577,2.92,578,3.479,579,3.479,580,3.479,581,2.92,582,2.92,583,2.551,584,5.231,585,3.479,586,3.479,587,3.479,588,3.479,589,5.231,590,6.11,591,3.479,592,2.92,593,5.023,594,2.92,595,2.92,596,4.646,597,3.479,598,3.479,599,3.479,600,2.92,601,4.646,602,4.646,603,3.479,604,3.479,605,3.479,606,4.646,607,4.646,608,3.479,609,3.479,610,3.479,611,3.479,612,3.479,613,2.551,614,3.479,615,3.479,616,3.479,617,3.479,618,3.479,619,3.479,620,3.479,621,3.479,622,2.551,623,3.479,624,3.479,625,3.479,626,3.479,627,3.479,628,3.479,629,2.92]],["title/modules.html",[34,1.873]],["body/modules.html",[12,0.024,30,0.024,31,0.024,33,2.933,34,1.879,44,2.65,45,2.65,46,2.036,47,2.65,48,2.65,613,4.69,630,6.395,631,6.395,632,6.395]],["title/overview.html",[633,3.751]],["body/overview.html",[2,1.127,12,0.029,21,2.672,30,0.019,31,0.019,32,0.969,33,4.206,34,1.316,35,1.316,36,1.549,37,1.549,38,1.316,39,1.426,40,1.549,41,2.634,42,2.634,43,2.634,44,3.637,45,3.319,46,2.794,47,3.517,48,3.517,49,2.138,50,1.549,51,1.549,70,1.316,111,2.672,172,2.634,173,2.634,175,2.933,202,2.702,270,1.426,324,2.672,335,2.634,336,2.634,352,2.634,353,2.634,354,2.634,399,2.672,419,2.634,421,2.634,470,2.672,498,2.634,499,2.634,633,2.634,634,2.634,635,2.634,636,2.634,637,2.634]],["title/properties.html",[273,1.948,553,2.307]],["body/properties.html",[12,0.029,30,0.025,31,0.025,273,2.431,583,3.612,622,3.612,629,4.134,638,4.926,639,4.926,640,4.926]],["title/miscellaneous/typealiases.html",[569,1.481,641,3.946]],["body/miscellaneous/typealiases.html",[7,0.732,12,0.026,30,0.026,31,0.026,90,1.316,489,3.793,550,3.63,569,2.666,642,4.95,643,4.154,644,4.95]],["title/miscellaneous/variables.html",[569,1.481,645,3.312]],["body/miscellaneous/variables.html",[4,0.093,7,0.187,12,0.028,27,0.39,30,0.009,31,0.009,74,1.797,89,0.421,90,0.486,171,0.681,182,1.266,188,1.061,192,0.927,239,1.061,260,2.814,263,1.401,308,1.797,317,1.061,330,1.061,332,1.061,409,1.061,479,1.061,480,1.061,489,0.827,544,1.061,550,0.927,569,0.681,577,1.061,581,1.797,582,1.061,583,4.181,592,1.061,593,1.061,594,1.797,595,1.061,600,1.061,613,0.927,622,0.927,634,1.061,635,1.061,636,1.061,637,1.061,643,1.061,645,1.061,646,1.264,647,1.264,648,2.141,649,2.786,650,1.264,651,1.264,652,1.264,653,5.701,654,2.141,655,1.264,656,1.264,657,1.264,658,2.786,659,2.786,660,1.264,661,1.264,662,1.264,663,2.141,664,1.264,665,2.141,666,2.786,667,2.141,668,1.264,669,1.264,670,1.264,671,1.264,672,1.264,673,2.141,674,2.786,675,1.264,676,1.264,677,1.264,678,1.264,679,2.141,680,1.264,681,2.141,682,1.264,683,1.264,684,1.264,685,2.141,686,1.264,687,1.264,688,1.264,689,1.264,690,1.264,691,2.141,692,1.264,693,2.141,694,1.264,695,1.264,696,1.264,697,2.141,698,1.264,699,1.264,700,1.264,701,1.264,702,2.141,703,1.264,704,1.264,705,1.264,706,1.264,707,1.264,708,1.264,709,1.264,710,2.786,711,2.141,712,1.264,713,1.264,714,2.141,715,2.141,716,1.264,717,1.264,718,1.264,719,2.141,720,2.141,721,2.141,722,2.141,723,1.264,724,1.264,725,1.264,726,1.264,727,1.264,728,1.264,729,1.264,730,1.264,731,1.264,732,1.264,733,1.264,734,2.141,735,1.264,736,1.264,737,2.141,738,2.141,739,2.141,740,2.141,741,1.264,742,1.264,743,1.264,744,1.264,745,1.264,746,1.264,747,2.141,748,1.264,749,1.264,750,1.264,751,1.264,752,1.264,753,1.264,754,1.264,755,1.264,756,1.264,757,1.264,758,1.264,759,1.264,760,1.264,761,2.141,762,1.264,763,2.141,764,1.264,765,1.264,766,1.264,767,2.141,768,1.264,769,2.141,770,1.264,771,1.264,772,2.141,773,1.264,774,1.264,775,2.141,776,1.264,777,1.264,778,1.264,779,1.264,780,2.141,781,2.141,782,1.264,783,2.786,784,1.264,785,1.264,786,2.141,787,2.141,788,1.264,789,1.264,790,1.264,791,2.141,792,1.264,793,2.141,794,1.264,795,1.264,796,1.264,797,1.264,798,1.264,799,1.264,800,1.264,801,1.264,802,1.264,803,1.264,804,1.264,805,1.264,806,1.264,807,1.264,808,2.141,809,2.141,810,1.264,811,1.264,812,1.264,813,1.264,814,1.264,815,2.141,816,2.141,817,1.264,818,1.264,819,2.141,820,1.264,821,1.264,822,1.264,823,2.141,824,1.264,825,1.264,826,1.264,827,2.141,828,1.264,829,1.264,830,1.264,831,1.264,832,1.264,833,2.141,834,1.264,835,1.264,836,2.141,837,1.264,838,2.786,839,1.264,840,2.786,841,1.264,842,1.264,843,1.264,844,1.264,845,1.264,846,1.264,847,1.264,848,1.264,849,1.264,850,1.264,851,1.264,852,1.264,853,1.264,854,1.264,855,1.264,856,1.264,857,1.264,858,1.264,859,1.264,860,2.141,861,2.141,862,1.264,863,1.264,864,1.264,865,1.264,866,1.264,867,1.264,868,1.264,869,1.264,870,2.786,871,1.264,872,1.264,873,1.264,874,1.264,875,1.264,876,1.264,877,1.264,878,1.264,879,1.264,880,1.264,881,2.141,882,2.141,883,1.264,884,2.141,885,1.264,886,1.264,887,1.264,888,1.264,889,1.264,890,1.264,891,2.141,892,1.264,893,1.264,894,1.264,895,1.264,896,1.264,897,1.264,898,1.264,899,1.264,900,1.264,901,1.264,902,1.264,903,1.264,904,1.264,905,1.264,906,1.264,907,2.141,908,1.264,909,1.264,910,1.264,911,1.264,912,1.264,913,1.264,914,1.264,915,1.264,916,1.264,917,2.141,918,1.264,919,1.264,920,1.264,921,1.264,922,1.264,923,1.264,924,1.264,925,1.264,926,1.264,927,1.264,928,1.264,929,1.264,930,2.141,931,1.264,932,1.264,933,1.264,934,1.264,935,1.264,936,1.264,937,1.264,938,1.264,939,1.264,940,1.264,941,1.264,942,1.264,943,2.141,944,1.264,945,1.264,946,1.264,947,1.264,948,1.264,949,1.264,950,1.264,951,1.264,952,1.264,953,1.264,954,1.264,955,1.264,956,1.264,957,1.264,958,1.264,959,1.264,960,1.264,961,1.264,962,1.264,963,1.264,964,1.264,965,1.264,966,1.264,967,1.264,968,1.264,969,1.264,970,1.264,971,1.264,972,1.264,973,1.264,974,1.264,975,1.264,976,1.264,977,1.264,978,2.141,979,1.264,980,1.264,981,1.264,982,1.264,983,1.264,984,1.264,985,1.264,986,1.264,987,1.264,988,1.264,989,1.264,990,1.264,991,1.264,992,1.264,993,1.264,994,1.264,995,1.264,996,1.264,997,1.264,998,1.264,999,1.264,1000,1.264,1001,1.264,1002,1.264,1003,1.264,1004,1.264,1005,1.264,1006,1.264,1007,1.264,1008,1.264,1009,1.264,1010,1.264]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":639,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["24/365",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24/7",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":635,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["5.1.1",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["5.9.1",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["57",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":634,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":637,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["7.8.1",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":636,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abcdefghij",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ability",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accept",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access",{"_index":328,"title":{},"body":{"controllers/LatihanController.html":{}}}],["accesstoken",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["act",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actually",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["add",{"_index":479,"title":{},"body":{"controllers/TaskController.html":{},"miscellaneous/variables.html":{}}}],["address",{"_index":274,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["address.\\nhigh",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admit",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adult",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agent",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agree",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ahead",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":642,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":614,"title":{},"body":{"index.html":{}}}],["animal",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["another",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":364,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":370,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":582,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":21,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectures",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argue",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["art",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artist",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ask",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":75,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":115,"title":{"injectables/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":166,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardpassport(\"jwt",{"_index":155,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":44,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":622,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["authority",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":111,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["avatar(@req",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["away",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b2c",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baby",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backers",{"_index":615,"title":{},"body":{"index.html":{}}}],["bad",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bag",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ball",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bandwidth",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["beat",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beautiful",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":331,"title":{},"body":{"controllers/LatihanController.html":{}}}],["behavior",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["benchmark",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["berhasil",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["between",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["billion",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["body.user_id",{"_index":486,"title":{},"body":{"controllers/TaskController.html":{}}}],["bootstrap",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":632,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":630,"title":{},"body":{"modules.html":{}}}],["building",{"_index":577,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["business",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["camera",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivate",{"_index":156,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":158,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["capital",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["carry",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["challenge",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["charge",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkpassword",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.email",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.id",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.name",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.password",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["choose",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":24,"title":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":270,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"overview.html":{}}}],["close",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["close.\\nalso",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_latihanmodule",{"_index":335,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_latihanmodule_providers",{"_index":336,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":352,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":353,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":354,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":419,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":420,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":421,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":498,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":500,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":499,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["com",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["company",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compare",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["concern",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["condition",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(info",{"_index":169,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["const",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["consumer",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["continue",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"latihan",{"_index":326,"title":{},"body":{"controllers/LatihanController.html":{}}}],["controller(\"school",{"_index":404,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller(\"tasks",{"_index":475,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["convergence",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["country",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["course",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["court",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cover",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":533,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":379,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":405,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":384,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["created",{"_index":491,"title":{},"body":{"controllers/TaskController.html":{}}}],["createschooldto",{"_index":269,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":450,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":485,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":455,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":506,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":289,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["createuser",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["cross",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cultural",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cup",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customer",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cutting",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dark",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["data.email",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.password",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.task_description",{"_index":519,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.task_name",{"_index":490,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["daughter",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decide",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"controllers/LatihanController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["deep",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["defense",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["delete",{"_index":398,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["delete(\":id",{"_index":416,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["delete(':id",{"_index":391,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deleteddata",{"_index":446,"title":{},"body":{"injectables/SchoolService.html":{}}}],["deletedtask",{"_index":524,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletetaskbyid",{"_index":451,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid(@param(\"id",{"_index":496,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(id",{"_index":458,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deliver",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["democratic",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":583,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["detail",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["determine",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":592,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["discuss",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disintermediate",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diskstorage",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["distributed",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ditemukan",{"_index":517,"title":{},"body":{"injectables/TaskService.html":{}}}],["documentation",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["dog",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dot",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["down",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drop",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drug",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto/create",{"_index":401,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":403,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dynamic",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":603,"title":{},"body":{"index.html":{}}}],["each",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["early",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eat",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eat.\\nfear",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edge",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efficient",{"_index":578,"title":{},"body":{"index.html":{}}}],["email",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["enable",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":359,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":361,"title":{},"body":{"injectables/PrismaService.html":{}}}],["end",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["energy",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["engineer",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entire",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":164,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["establish",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["everybody",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["everyone",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":589,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":159,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["expired",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["exports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["extend",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":154,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extensible",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eye",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyeballs",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["face",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facilitate",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["fast",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["file.destination}/${file.filename",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.originalname",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor(\"avatar",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["final",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":380,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":381,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param(\"id",{"_index":411,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":387,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["first",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["floor",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["force",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forward",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["four",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":576,"title":{},"body":{"index.html":{}}}],["friend",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":483,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["functions",{"_index":570,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gas",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(\":id",{"_index":410,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["get(\"hello2",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["get(\"profile",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":388,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('hello2",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["getalltask",{"_index":504,"title":{},"body":{"injectables/TaskService.html":{}}}],["getalltask(user_id",{"_index":509,"title":{},"body":{"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello2",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getlatihan",{"_index":322,"title":{},"body":{"controllers/LatihanController.html":{}}}],["gettask",{"_index":452,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid",{"_index":453,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param(\"id",{"_index":493,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(id",{"_index":463,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":572,"title":{"index.html":{}},"body":{}}],["global",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["great",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grow",{"_index":610,"title":{},"body":{"index.html":{}}}],["growth",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gun",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guy",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handlerequest",{"_index":157,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handlerequest(err",{"_index":162,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hard.\\npeace",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["harness",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hash",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["health",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hear",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hello",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":333,"title":{},"body":{"controllers/LatihanController.html":{},"controllers/TaskController.html":{},"index.html":{}}}],["high",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["himself",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["history",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["home",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hope",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hospital",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hotel",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["house",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["httpexception(\"bad",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(\"school",{"_index":434,"title":{},"body":{"injectables/SchoolService.html":{}}}],["httpexception(\"user",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":626,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.bad_request",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.found",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.unauthorized",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["huge",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["idea",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["imagine",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":367,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["important",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["improve",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["include",{"_index":332,"title":{},"body":{"controllers/LatihanController.html":{},"miscellaneous/variables.html":{}}}],["including",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["incubate",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":480,"title":{},"body":{"controllers/TaskController.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":362,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["information",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["information.\\nsay",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infrastructures",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":298,"title":{},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["inject(request",{"_index":476,"title":{},"body":{"controllers/TaskController.html":{}}}],["injectable",{"_index":69,"title":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["inside",{"_index":330,"title":{},"body":{"controllers/LatihanController.html":{},"miscellaneous/variables.html":{}}}],["installation",{"_index":588,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":591,"title":{},"body":{"index.html":{}}}],["integrate",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integrated",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interest",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interfaces",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interview",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["involve",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemail",{"_index":284,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":285,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isemail",{"_index":344,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring",{"_index":294,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":346,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isoptional",{"_index":286,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isoptional()@isstring",{"_index":532,"title":{},"body":{"classes/UpdateTaskDto.html":{}}}],["isstring",{"_index":287,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{}}}],["isstring()@isnotempty",{"_index":282,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional",{"_index":277,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional()@isemail",{"_index":279,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["issue",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issue.\\nregion",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iterate",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itself",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":175,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":623,"title":{},"body":{"index.html":{}}}],["key",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kind",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kitchen",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["know",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["knowledge",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["language",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["late",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["late.\\ntechnology",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["latihan",{"_index":321,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["latihan.controller",{"_index":338,"title":{},"body":{"modules/LatihanModule.html":{}}}],["latihan.service",{"_index":325,"title":{},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{}}}],["latihan/latihan.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["latihancontroller",{"_index":319,"title":{"controllers/LatihanController.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"coverage.html":{}}}],["latihanmodule",{"_index":45,"title":{"modules/LatihanModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LatihanModule.html":{},"modules.html":{},"overview.html":{}}}],["latihanservice",{"_index":324,"title":{"injectables/LatihanService.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"coverage.html":{},"overview.html":{}}}],["laugh",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lead",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leading",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["leverage",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":629,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":607,"title":{},"body":{"index.html":{}}}],["list",{"_index":409,"title":{},"body":{"controllers/SchoolController.html":{},"miscellaneous/variables.html":{}}}],["literal",{"_index":644,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["live",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":95,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["long",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loss",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maintain",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["man",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manager",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["many",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["market",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["markets",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["marriage",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matter",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximize",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":349,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":351,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maybe",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mean",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mean.\\nwonder",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":327,"title":{},"body":{"controllers/LatihanController.html":{}}}],["measure",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meet",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meeting",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["metrics",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mindshare",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minlength",{"_index":348,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":350,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":569,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":606,"title":{},"body":{"index.html":{}}}],["mode",{"_index":596,"title":{},"body":{"index.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":619,"title":{},"body":{"index.html":{}}}],["morph",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mouth",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["much",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multer",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":624,"title":{},"body":{"index.html":{}}}],["name",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["nation",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["national",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need.\\nbad",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":584,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":628,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":474,"title":{},"body":{"controllers/TaskController.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":529,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":167,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":171,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newspaper.\\nand",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nice",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["night",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.js",{"_index":575,"title":{},"body":{"index.html":{}}}],["none",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["north.\\nfind",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nothing",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":590,"title":{},"body":{"index.html":{}}}],["number",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["object",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["official",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oil",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":360,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":608,"title":{},"body":{"index.html":{}}}],["optional",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["outside",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":633,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":553,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["painting",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["panggilatihan",{"_index":340,"title":{},"body":{"injectables/LatihanService.html":{}}}],["param",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["param(\"id",{"_index":414,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["parameters",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["parent",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partialtype",{"_index":528,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":527,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partner",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pass",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":301,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":397,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch(\":id",{"_index":413,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch(':id",{"_index":395,"title":{},"body":{"controllers/SchoolController.html":{}}}],["path",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["peace.\\npopulation",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["person",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone",{"_index":275,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["physical",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":481,"title":{},"body":{"controllers/TaskController.html":{}}}],["platform",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["play",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":617,"title":{},"body":{"index.html":{}}}],["plug",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["point",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["police",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portals",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post(\"avatar",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["power",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["price",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prisma.service",{"_index":356,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":366,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":358,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":46,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":202,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"controllers/LatihanController.html":{},"controllers/TaskController.html":{}}}],["proactive",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.on(\"beforeexit",{"_index":369,"title":{},"body":{"injectables/PrismaService.html":{}}}],["produce",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":598,"title":{},"body":{"index.html":{}}}],["professional",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":574,"title":{},"body":{"index.html":{}}}],["project",{"_index":609,"title":{},"body":{"index.html":{}}}],["properties",{"_index":273,"title":{"properties.html":{}},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{},"properties.html":{}}}],["property",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/image",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["push",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["put",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["raise",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":618,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["realize",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reason",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recently",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognize",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["record",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":103,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registered",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["remember",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":382,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param(\"id",{"_index":417,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":390,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["repository",{"_index":587,"title":{},"body":{"index.html":{}}}],["republican",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["req.user.id",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["request",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"controllers/TaskController.html":{}}}],["research",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["response",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rest",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["right",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["risk",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["road",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":329,"title":{},"body":{"controllers/LatihanController.html":{}}}],["rule",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":593,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":579,"title":{},"body":{"index.html":{}}}],["scene",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemas",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":375,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["school.controller",{"_index":423,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":402,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":272,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:11",{"_index":280,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:15",{"_index":278,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:19",{"_index":281,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:6",{"_index":283,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":400,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["school_name",{"_index":276,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":377,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":47,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schools",{"_index":407,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["schoolservice",{"_index":399,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["science",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["score",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sea",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seamless",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["season",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seat",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["second",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["see",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["send",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["senior",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serve",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":580,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["services",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["session",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["seven",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":581,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["signoptions",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["similar",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sing",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smile",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smile.\\nhuman",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["soldier",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solutions",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["something",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["son",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTaskDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["south",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["space",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":482,"title":{},"body":{"controllers/TaskController.html":{}}}],["speech.\\nnight",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sponsors",{"_index":612,"title":{},"body":{"index.html":{}}}],["sport",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spring",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt_config.ts",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tasks.ts",{"_index":643,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:23",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":473,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":153,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:10",{"_index":160,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:14",{"_index":163,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:101",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:121",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:60",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":343,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":345,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:18",{"_index":347,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":371,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:12",{"_index":373,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:16",{"_index":372,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:22",{"_index":374,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":300,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":305,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":303,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config.ts",{"_index":544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/latihan/latihan.controller.ts",{"_index":320,"title":{},"body":{"controllers/LatihanController.html":{},"coverage.html":{}}}],["src/latihan/latihan.controller.ts:13",{"_index":323,"title":{},"body":{"controllers/LatihanController.html":{}}}],["src/latihan/latihan.module.ts",{"_index":337,"title":{},"body":{"modules/LatihanModule.html":{}}}],["src/latihan/latihan.service.ts",{"_index":339,"title":{},"body":{"injectables/LatihanService.html":{},"coverage.html":{}}}],["src/latihan/latihan.service.ts:5",{"_index":341,"title":{},"body":{"injectables/LatihanService.html":{}}}],["src/main.ts",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":355,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":357,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":363,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":365,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":271,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":526,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":376,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":378,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:19",{"_index":385,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:28",{"_index":386,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:37",{"_index":389,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:46",{"_index":396,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:58",{"_index":392,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":422,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":424,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:10",{"_index":426,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:17",{"_index":427,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:22",{"_index":428,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:36",{"_index":430,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:7",{"_index":425,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:73",{"_index":429,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/tasks.ts",{"_index":550,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":290,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":531,"title":{},"body":{"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":449,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:28",{"_index":462,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:40",{"_index":457,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:52",{"_index":465,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:62",{"_index":469,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:78",{"_index":460,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":501,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":503,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:10",{"_index":510,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:18",{"_index":507,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:22",{"_index":511,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:37",{"_index":512,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:64",{"_index":508,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:7",{"_index":505,"title":{},"body":{"injectables/TaskService.html":{}}}],["staff",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stage",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standard",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["star",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":594,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["start:dev",{"_index":597,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":599,"title":{},"body":{"index.html":{}}}],["started",{"_index":573,"title":{"index.html":{}},"body":{}}],["starter",{"_index":586,"title":{},"body":{"index.html":{}}}],["state",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["stay",{"_index":620,"title":{},"body":{"index.html":{}}}],["stop",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["store",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategize",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTaskDto.html":{}}}],["structure",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["study",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sub",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["successfull",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":492,"title":{},"body":{"controllers/TaskController.html":{}}}],["suddenly",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["suggest",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summer",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":168,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["support",{"_index":613,"title":{},"body":{"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["sure",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["surface",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":631,"title":{},"body":{"modules.html":{}}}],["syndicate",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":489,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":502,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":472,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":291,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:10",{"_index":295,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:12",{"_index":297,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.dto.ts:6",{"_index":296,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task.service",{"_index":471,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":292,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["task_name",{"_index":293,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["taskcontroller",{"_index":448,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodule",{"_index":48,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":470,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["tax",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teacher",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["team",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technologies",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technology",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["television",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ten",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["term",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":602,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":605,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":604,"title":{},"body":{"index.html":{}}}],["tests",{"_index":601,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":611,"title":{},"body":{"index.html":{}}}],["third",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.$connect",{"_index":368,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.user.id",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.latihanservice.panggilatihan",{"_index":334,"title":{},"body":{"controllers/LatihanController.html":{}}}],["this.prisma.schools.create",{"_index":431,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":447,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findfirst",{"_index":433,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":432,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":445,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.tasks.create",{"_index":514,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":525,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":515,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":513,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":523,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":487,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":406,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":408,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":412,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":418,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":415,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(body",{"_index":488,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskbyid(+id",{"_index":497,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask(this.req.user.id",{"_index":477,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+id",{"_index":494,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskbyid(+id",{"_index":495,"title":{},"body":{"controllers/TaskController.html":{}}}],["those",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thousand",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throw",{"_index":170,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["throw.\\neffort",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tidak",{"_index":516,"title":{},"body":{"injectables/TaskService.html":{}}}],["title",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["today",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":621,"title":{},"body":{"index.html":{}}}],["town",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["transparent",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["treatment",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trouble",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["try",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["turn",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tv",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":627,"title":{},"body":{"index.html":{}}}],["two",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":641,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":530,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":585,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":165,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["under",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["understand",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":600,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":640,"title":{},"body":{"properties.html":{}}}],["update",{"_index":383,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{}}}],["update(id",{"_index":393,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updateavatar",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedata",{"_index":518,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatedata[\"task_description",{"_index":520,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatedata[\"task_name",{"_index":521,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateddata",{"_index":435,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateddata[\"address",{"_index":437,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateddata[\"email",{"_index":439,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateddata[\"phone",{"_index":441,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateddata[\"school_name",{"_index":443,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updatedtask",{"_index":522,"title":{},"body":{"injectables/TaskService.html":{}}}],["updateschool",{"_index":444,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschooldto",{"_index":394,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updateschooldto.address",{"_index":436,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschooldto.email",{"_index":438,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschooldto.phone",{"_index":440,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updateschooldto.school_name",{"_index":442,"title":{},"body":{"injectables/SchoolService.html":{}}}],["updatetaskbyid",{"_index":454,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskbyid(id",{"_index":466,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskdto",{"_index":467,"title":{"classes/UpdateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{},"coverage.html":{}}}],["upload",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete(':id",{"_index":459,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":461,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get(':id",{"_index":464,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('profile",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@patch(':id",{"_index":468,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@post",{"_index":456,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@useinterceptors(undefined)@post('avatar",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes",{"_index":478,"title":{},"body":{"controllers/TaskController.html":{}}}],["usepipes(validationpipe",{"_index":484,"title":{},"body":{"controllers/TaskController.html":{}}}],["user",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["user_id",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTaskDto.html":{}}}],["validate",{"_index":302,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":304,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validation",{"_index":299,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTaskDto.html":{}}}],["validator",{"_index":288,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTaskDto.html":{},"dependencies.html":{}}}],["value",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":645,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":638,"title":{},"body":{"properties.html":{}}}],["virtual",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visit",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["voice",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["walk",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["war",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":595,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["way",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["web",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["website",{"_index":625,"title":{},"body":{"index.html":{}}}],["weight",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["west",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whatever",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whiteboard",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whole",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wife",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wind",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wish",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["woman",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["wrong",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["you'd",{"_index":616,"title":{},"body":{"index.html":{}}}],["young",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yourself",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yuk",{"_index":342,"title":{},"body":{"injectables/LatihanService.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getHello2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello2\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello2()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello2')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello();\n    }\n\n    @Get(\"hello2\")\n    getHello2(): string {\n        return this.appService.getHello();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LatihanModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { LatihanModule } from \"./latihan/latihan.module\";\nimport { TaskModule } from \"./task/task.module\";\nimport { PrismaModule } from \"./prisma/prisma.module\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { ServeStaticModule } from \"@nestjs/serve-static\";\nimport { join } from \"path\";\nimport { SchoolModule } from \"./school/school.module\";\n\n@Module({\n    imports: [\n        ServeStaticModule.forRoot({\n            rootPath: join(__dirname, \"..\", \"public\"),\n        }),\n        LatihanModule,\n        TaskModule,\n        PrismaModule,\n        AuthModule,\n        SchoolModule,\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return \"Hello World!\";\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Get,\n    Post,\n    Req,\n    UploadedFile,\n    UseGuards,\n    UseInterceptors,\n} from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\nimport { RegisterDto } from \"./dto/register.dto\";\nimport { LoginDto } from \"./dto/login.dto\";\nimport { AuthGuard } from \"./auth.guard\";\nimport { FileInterceptor } from \"@nestjs/platform-express\";\nimport { diskStorage } from \"multer\";\n\n@Controller(\"auth\")\nexport class AuthController {\n    constructor(private authService: AuthService) {}\n\n    @Post(\"register\")\n    async register(@Body() data: RegisterDto) {\n        return await this.authService.register(data);\n    }\n\n    @Post(\"login\")\n    async login(@Body() data: LoginDto) {\n        return await this.authService.login(data);\n    }\n\n    @UseGuards(AuthGuard)\n    @Get(\"profile\")\n    async profile(@Req() req) {\n        const user = await this.authService.profile(req.user.id);\n\n        return {\n            message: \"Success Get Profile Data\",\n            data: user,\n        };\n    }\n\n    @UseGuards(AuthGuard)\n    @UseInterceptors(\n        FileInterceptor(\"avatar\", {\n            storage: diskStorage({\n                destination: \"public/uploads/image\",\n                filename: (req, file, cb) => {\n                    cb(null, file.originalname);\n                },\n            }),\n        }),\n    )\n    @Post(\"avatar\")\n    async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n        await this.authService.uploadAvatar(\n            req.user.id,\n            `${file.destination}/${file.filename}`,\n        );\n\n        return {\n            message: \"Change Avatar Image Success\",\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardPassport(\"jwt\")\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    ExecutionContext,\n    Injectable,\n    UnauthorizedException,\n} from \"@nestjs/common\";\nimport { AuthGuard as AuthGuardPassport } from \"@nestjs/passport\";\n\n@Injectable()\nexport class AuthGuard extends AuthGuardPassport(\"jwt\") {\n    canActivate(context: ExecutionContext) {\n        return super.canActivate(context);\n    }\n\n    handleRequest(err, user, info) {\n        console.log(info);\n        if (err || !user) {\n            throw err || new UnauthorizedException();\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\nimport { PrismaModule } from \"src/prisma/prisma.module\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { jwt_config } from \"src/config/jwt_config\";\nimport { JwtStrategy } from \"./jwt.strategy\";\n\n@Module({\n    imports: [\n        PrismaModule,\n        PassportModule.register({\n            defaultStrategy: \"jwt\",\n            property: \"user\",\n            session: false,\n        }),\n        JwtModule.register({\n            secret: jwt_config.secret,\n            signOptions: {\n                expiresIn: jwt_config.expired,\n            },\n        }),\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Generate JWT Token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Login user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n                        User Detail\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Upload Avatar\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { PrismaService } from \"src/prisma/prisma.service\";\nimport { RegisterDto } from \"./dto/register.dto\";\nimport { compare, hash } from \"bcrypt\";\nimport { LoginDto } from \"./dto/login.dto\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { jwt_config } from \"src/config/jwt_config\";\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private prisma: PrismaService,\n        private jwtService: JwtService,\n    ) {}\n\n    /**\n     * Generate JWT Token\n     * @param payload\n     * @returns\n     */\n    generateJWT(payload: any) {\n        return this.jwtService.sign(payload, {\n            secret: jwt_config.secret,\n            expiresIn: jwt_config.expired,\n        });\n    }\n\n    async register(data: RegisterDto) {\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                email: data.email,\n            },\n        });\n\n        if (checkUserExists) {\n            throw new HttpException(\n                \"User already registered\",\n                HttpStatus.FOUND,\n            );\n        }\n\n        data.password = await hash(data.password, 12);\n\n        const createUser = await this.prisma.users.create({\n            data: data,\n        });\n\n        if (createUser) {\n            return {\n                statusCode: 200,\n                message: \"Register Successfull\",\n            };\n        }\n    }\n\n    /**\n     * Login user\n     * @param data\n     */\n    async login(data: LoginDto) {\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                email: data.email,\n            },\n        });\n\n        if (!checkUserExists) {\n            throw new HttpException(\"User not found\", HttpStatus.NOT_FOUND);\n        }\n\n        const checkPassword = await compare(\n            data.password,\n            checkUserExists.password,\n        );\n\n        if (checkPassword) {\n            const accessToken = this.generateJWT({\n                sub: checkUserExists.id,\n                name: checkUserExists.name,\n                email: checkUserExists.email,\n            });\n\n            return {\n                statusCode: 200,\n                message: \"Login berhasil\",\n                accessToken: accessToken,\n            };\n        } else {\n            throw new HttpException(\n                \"User or password not match\",\n                HttpStatus.UNAUTHORIZED,\n            );\n        }\n    }\n\n    /**\n     * User Detail\n     * @param user_id\n     * @returns\n     */\n    async profile(user_id: number) {\n        return await this.prisma.users.findFirst({\n            where: {\n                id: user_id,\n            },\n            select: {\n                name: true,\n                email: true,\n                avatar: true,\n                tasks: true,\n            },\n        });\n    }\n\n    /**\n     * Upload Avatar\n     * @param user_id\n     * @param avatar\n     * @returns\n     */\n    async uploadAvatar(user_id: number, avatar) {\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                id: user_id,\n            },\n        });\n\n        if (checkUserExists) {\n            const updateAvatar = await this.prisma.users.update({\n                data: {\n                    avatar: avatar,\n                },\n                where: {\n                    id: user_id,\n                },\n            });\n\n            if (updateAvatar) {\n                return {\n                    statusCode: 200,\n                    message: \"Upload avatar berhasil\",\n                };\n            }\n        }\n\n        throw new HttpException(\"Bad request\", HttpStatus.BAD_REQUEST);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateSchoolDto {\n    @IsString()\n    @IsNotEmpty()\n    school_name: string;\n\n    @IsString()\n    @IsOptional()\n    @IsEmail()\n    email?: string;\n\n    @IsString()\n    @IsOptional()\n    address?: string;\n\n    @IsString()\n    @IsOptional()\n    phone?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateTaskDto {\n    @IsNotEmpty() // inject validation\n    @IsString() // inject validation\n    task_name: string;\n\n    @IsNotEmpty() // inject validation\n    @IsString() // inject validation\n    task_description: string;\n\n    user_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, \"jwt\")\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwt_config } from \"src/config/jwt_config\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, \"jwt\") {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwt_config.secret,\n        });\n    }\n\n    async validate(payload: any) {\n        return {\n            id: payload.sub,\n            email: payload.email,\n            expired: payload.exp,\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LatihanController.html":{"url":"controllers/LatihanController.html","title":"controller - LatihanController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LatihanController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                latihan\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatihan()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/latihan/latihan.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { LatihanService } from \"./latihan.service\";\n\n@Controller(\"latihan\") // meaning we can access the route name \"latihan\"\nexport class LatihanController {\n    constructor(\n        // LatihanService should be inside providers and should be injectable\n        // before can include here\n        private latihanService: LatihanService,\n    ) {}\n\n    @Get()\n    getLatihan(): string {\n        return this.latihanService.panggiLatihan();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LatihanModule.html":{"url":"modules/LatihanModule.html","title":"module - LatihanModule","body":"\n                   \n\n\n\n\n    Modules\n    LatihanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\n\nLatihanService\n\nLatihanService\n\n\n\nLatihanModule\n\nLatihanModule\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/latihan/latihan.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LatihanService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LatihanController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { LatihanController } from \"./latihan.controller\";\nimport { LatihanService } from \"./latihan.service\";\n\n@Module({\n    controllers: [LatihanController],\n    providers: [LatihanService],\n})\nexport class LatihanModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatihanService.html":{"url":"injectables/LatihanService.html","title":"injectable - LatihanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LatihanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                panggiLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        panggiLatihan\n                        \n                    \n                \n            \n            \n                \npanggiLatihan()\n                \n            \n\n\n                    \n                        \n                            Defined in src/latihan/latihan.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class LatihanService {\n    panggiLatihan(): string {\n        return \"yuk latihan\";\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsString,\n    IsNotEmpty,\n    IsEmail,\n    MinLength,\n    MaxLength,\n} from \"class-validator\";\n\nexport class LoginDto {\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PrismaService } from \"./prisma.service\";\n\n@Module({\n    providers: [PrismaService],\n    exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { PrismaClient } from \"@prisma/client\";\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    async onModuleInit() {\n        await this.$connect();\n    }\n\n    async enableShutdownHooks(app: INestApplication) {\n        process.on(\"beforeExit\", async () => {\n            await app.close();\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    IsString,\n    IsNotEmpty,\n    IsEmail,\n    MinLength,\n    MaxLength,\n} from \"class-validator\";\n\nexport class RegisterDto {\n    @IsNotEmpty()\n    @IsString()\n    name: string;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Get,\n    Post,\n    Body,\n    Patch,\n    Param,\n    Delete,\n} from \"@nestjs/common\";\nimport { SchoolService } from \"./school.service\";\nimport { CreateSchoolDto } from \"./dto/create-school.dto\";\nimport { UpdateSchoolDto } from \"./dto/update-school.dto\";\n\n@Controller(\"school\")\nexport class SchoolController {\n    constructor(private readonly schoolService: SchoolService) {}\n\n    @Post()\n    async create(@Body() createSchoolDto: CreateSchoolDto) {\n        const school = await this.schoolService.create(createSchoolDto);\n        return {\n            message: \"Create School Success\",\n            data: school,\n        };\n    }\n\n    @Get()\n    async findAll() {\n        const schools = await this.schoolService.findAll();\n        return {\n            message: \"Get All School List Success\",\n            data: schools,\n        };\n    }\n\n    @Get(\":id\")\n    async findOne(@Param(\"id\") id: string) {\n        const school = await this.schoolService.findOne(+id);\n        return {\n            message: \"Get School Data Success\",\n            data: school,\n        };\n    }\n\n    @Patch(\":id\")\n    async update(\n        @Param(\"id\") id: string,\n        @Body() updateSchoolDto: UpdateSchoolDto,\n    ) {\n        const school = await this.schoolService.update(+id, updateSchoolDto);\n        return {\n            message: \"Update School Data Success\",\n            data: school,\n        };\n    }\n\n    @Delete(\":id\")\n    async remove(@Param(\"id\") id: string) {\n        const school = await this.schoolService.remove(+id);\n        return {\n            message: \"Delete School Data Success\",\n            data: school,\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SchoolService } from \"./school.service\";\nimport { SchoolController } from \"./school.controller\";\nimport { PrismaModule } from \"src/prisma/prisma.module\";\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [SchoolController],\n    providers: [SchoolService],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { CreateSchoolDto } from \"./dto/create-school.dto\";\nimport { UpdateSchoolDto } from \"./dto/update-school.dto\";\nimport { PrismaService } from \"src/prisma/prisma.service\";\n\n@Injectable()\nexport class SchoolService {\n    constructor(private prisma: PrismaService) {}\n\n    async create(createSchoolDto: CreateSchoolDto) {\n        const school = await this.prisma.schools.create({\n            data: createSchoolDto,\n        });\n        return school;\n    }\n\n    async findAll() {\n        const schools = await this.prisma.schools.findMany({});\n        return schools;\n    }\n\n    async findOne(id: number) {\n        const school = await this.prisma.schools.findFirst({\n            where: {\n                id,\n            },\n        });\n\n        if (!school) {\n            throw new HttpException(\"School Not Found\", HttpStatus.NOT_FOUND);\n        }\n\n        return school;\n    }\n\n    async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n        const school = await this.prisma.schools.findFirst({\n            where: {\n                id,\n            },\n        });\n\n        if (!school) {\n            throw new HttpException(\"School Not Found\", HttpStatus.NOT_FOUND);\n        }\n\n        const updatedData = {};\n\n        if (updateSchoolDto.address) {\n            updatedData[\"address\"] = updateSchoolDto.address;\n        }\n\n        if (updateSchoolDto.email) {\n            updatedData[\"email\"] = updateSchoolDto.email;\n        }\n\n        if (updateSchoolDto.phone) {\n            updatedData[\"phone\"] = updateSchoolDto.phone;\n        }\n\n        if (updateSchoolDto.school_name) {\n            updatedData[\"school_name\"] = updateSchoolDto.school_name;\n        }\n\n        const updateSchool = await this.prisma.schools.update({\n            where: { id },\n            data: updatedData,\n        });\n\n        return updateSchool;\n    }\n\n    async remove(id: number) {\n        const school = await this.prisma.schools.findFirst({\n            where: {\n                id,\n            },\n        });\n\n        if (!school) {\n            throw new HttpException(\"School Not Found\", HttpStatus.NOT_FOUND);\n        }\n\n        const deletedData = await this.prisma.schools.delete({\n            where: {\n                id,\n            },\n        });\n\n        return deletedData;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(body: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(id: string, body: UpdateTaskDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Inject,\n    Param,\n    Patch,\n    Post,\n    Req,\n    UseGuards,\n} from \"@nestjs/common\";\nimport { TaskService } from \"./task.service\";\nimport { CreateTaskDto } from \"./dto/create-task.dto\";\nimport { UpdateTaskDto } from \"./dto/update-task.dto\";\nimport { AuthGuard } from \"src/auth/auth.guard\";\nimport { REQUEST } from \"@nestjs/core\";\n\n@Controller(\"tasks\")\nexport class TaskController {\n    constructor(\n        private taskService: TaskService,\n        @Inject(REQUEST) private req: any,\n    ) {}\n\n    @UseGuards(AuthGuard)\n    @Get()\n    async getTask() {\n        const tasks = await this.taskService.getAllTask(this.req.user.id);\n        return {\n            message: \"Get All Tasks Success\",\n            data: tasks,\n        };\n    }\n\n    // UsePipes here is add individual pipe to specific function\n    // @UsePipes(ValidationPipe)\n    @UseGuards(AuthGuard)\n    @Post()\n    async createTask(@Body() body: CreateTaskDto) {\n        body.user_id = this.req.user.id;\n\n        const data = await this.taskService.createTask(body);\n        return {\n            message: `Task '${data.task_name}' created successfully`,\n            data: data,\n        };\n    }\n\n    @UseGuards(AuthGuard)\n    @Get(\":id\")\n    async getTaskById(@Param(\"id\") id: string, @Req() req) {\n        const task = await this.taskService.getTaskById(+id, req.user.id);\n        return {\n            message: \"Get Task Success\",\n            data: task,\n        };\n    }\n\n    @UseGuards(AuthGuard)\n    @Patch(\":id\")\n    async updateTaskById(\n        @Param(\"id\") id: string,\n        @Body() body: UpdateTaskDto,\n        @Req() req,\n    ) {\n        body.user_id = req.user.id;\n        const task = await this.taskService.updateTaskById(+id, body);\n\n        return {\n            message: `Update Task id ${id} Success`,\n            data: task,\n        };\n    }\n\n    @UseGuards(AuthGuard)\n    @Delete(\":id\")\n    async deleteTaskById(@Param(\"id\") id: string, @Req() req) {\n        const task = await this.taskService.deleteTaskById(+id, req.user.id);\n\n        return {\n            message: `Delete Task id ${id} Success`,\n            data: task,\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_TaskModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TaskController } from \"./task.controller\";\nimport { TaskService } from \"./task.service\";\nimport { PrismaModule } from \"src/prisma/prisma.module\";\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [TaskController],\n    providers: [TaskService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(data: CreateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(id: number, user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask(user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(id: number, user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTaskById(id: number, data: UpdateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { CreateTaskDto } from \"./dto/create-task.dto\";\nimport { PrismaService } from \"src/prisma/prisma.service\";\nimport { UpdateTaskDto } from \"./dto/update-task.dto\";\n\n@Injectable()\nexport class TaskService {\n    constructor(private prisma: PrismaService) {}\n\n    async getAllTask(user_id: number) {\n        return await this.prisma.tasks.findMany({\n            where: {\n                user_id,\n            },\n        });\n    }\n\n    async createTask(data: CreateTaskDto) {\n        return await this.prisma.tasks.create({ data: data });\n    }\n\n    async getTaskById(id: number, user_id: number) {\n        const task = await this.prisma.tasks.findFirst({\n            where: { id: id, user_id },\n        });\n\n        if (!task) {\n            throw new HttpException(\n                { message: \"Task tidak ditemukan\" },\n                HttpStatus.NOT_FOUND,\n            );\n        }\n\n        return task;\n    }\n\n    async updateTaskById(id: number, data: UpdateTaskDto) {\n        const task = await this.prisma.tasks.findFirst({ where: { id: id } });\n\n        if (!task) {\n            throw new HttpException(\n                { message: \"Task tidak ditemukan\" },\n                HttpStatus.NOT_FOUND,\n            );\n        }\n\n        const updateData = {};\n        if (data.task_description) {\n            updateData[\"task_description\"] = data.task_description;\n        }\n\n        if (data.task_name) {\n            updateData[\"task_name\"] = data.task_name;\n        }\n\n        const updatedTask = await this.prisma.tasks.update({\n            where: { id },\n            data: updateData,\n        });\n\n        return updatedTask;\n    }\n\n    async deleteTaskById(id: number, user_id: number) {\n        const task = await this.prisma.tasks.findFirst({\n            where: { id: id, user_id },\n        });\n\n        if (!task) {\n            throw new HttpException(\n                { message: \"Task tidak ditemukan\" },\n                HttpStatus.NOT_FOUND,\n            );\n        }\n\n        const deletedTask = await this.prisma.tasks.delete({\n            where: { id },\n        });\n\n        return deletedTask;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSchoolDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateSchoolDto } from \"./create-school.dto\";\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTaskDto.html":{"url":"classes/UpdateTaskDto.html","title":"class - UpdateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from \"class-validator\";\n\nexport class UpdateTaskDto {\n    @IsOptional() // inject validation\n    @IsString() // inject validation\n    task_name: string;\n\n    @IsOptional() // inject validation\n    @IsString() // inject validation\n    task_description: string;\n\n    user_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/jwt_config.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/latihan/latihan.controller.ts\n            \n            controller\n            LatihanController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/latihan/latihan.service.ts\n            \n            injectable\n            LatihanService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/tasks.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.1\n        \n            @prisma/client : ^5.9.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LatihanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLatihanService\n\nLatihanService\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Task   (src/.../tasks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/task/data/tasks.ts\n    \n    \n        \n            \n                \n                    \n                    Task\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../jwt_config.ts)\n                        \n                        \n                            tasks   (src/.../tasks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/jwt_config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: \"abcdefghij\",\n    expired: 3600,\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/tasks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        id: 1,\n        title: \"Enable Global Convergence\",\n        description:\n            \"Police team be choose which. Wife kind court west measure any. House soldier direction condition.\",\n    },\n    {\n        id: 2,\n        title: \"Disintermediate Plug-And-Play Mindshare\",\n        description:\n            \"Put him official power fast no. Meeting friend knowledge maybe war research smile.\\nHuman we way unit newspaper.\\nAnd raise else act. Likely sing great manager dark. Us authority if company.\",\n    },\n    {\n        id: 3,\n        title: \"Syndicate Cross-Media Eyeballs\",\n        description:\n            \"Staff try important. Baby everyone long thousand watch as. Score high capital one TV space.\",\n    },\n    {\n        id: 4,\n        title: \"Deliver Distributed Web Services\",\n        description:\n            \"Seven national structure simple management north.\\nFind none rather inside wish child loss. Oil its nice weight. This drop surface sport name remember.\",\n    },\n    {\n        id: 5,\n        title: \"Benchmark Cutting-Edge Bandwidth\",\n        description:\n            \"Provide him artist everybody. Understand direction stage tax concern close.\\nAlso cup important reason physical treatment end. Laugh partner product.\",\n    },\n    {\n        id: 6,\n        title: \"Iterate Cross-Platform Bandwidth\",\n        description:\n            \"Event young source run. Become each development support beat mean.\\nWonder cultural imagine TV. Charge matter within control night.\",\n    },\n    {\n        id: 7,\n        title: \"Extend Transparent Architectures\",\n        description:\n            \"Nothing country manager business ok. Growth cover at sure gun art. There else nation rest speech.\\nNight cup eat record determine. Also management behavior recognize. Force wait billion teacher.\",\n    },\n    {\n        id: 8,\n        title: \"Leverage Leading-Edge Markets\",\n        description:\n            \"Whatever animal hope artist voice marriage. Similar smile kitchen seat. Authority store yet agree state argue health parent.\",\n    },\n    {\n        id: 9,\n        title: \"Morph Extensible Interfaces\",\n        description:\n            \"Spring road final wind what. Serve lead either it his off. Meet world ball maintain rule floor west member. There term into them including.\",\n    },\n    {\n        id: 10,\n        title: \"Facilitate Virtual E-Business\",\n        description:\n            \"Her late much new low list need.\\nBad art record outside gun key either defense. Return early way yet member.\",\n    },\n    {\n        id: 11,\n        title: \"Strategize Dot-Com Infrastructures\",\n        description:\n            \"Between spring suggest carry. Property ahead hotel painting. Be hour beautiful national town peace.\\nPopulation night enter interview teacher price memory. A man left forward away summer author.\",\n    },\n    {\n        id: 12,\n        title: \"Deliver B2C Portals\",\n        description:\n            \"Something many sea standard. Star world strategy dog cultural determine value. Then choose small that address.\\nHigh all another mouth language put. Total those camera third.\",\n    },\n    {\n        id: 13,\n        title: \"Whiteboard Proactive Solutions\",\n        description:\n            \"Sea case group customer woman let involve huge. Guy section two entire however continue. Turn down of state. Strategy season under not.\",\n    },\n    {\n        id: 14,\n        title: \"Incubate 24/365 Architectures\",\n        description:\n            \"Man wrong bad start rest structure study. Drug democratic action eat.\\nFear consumer outside whole. Face region material environment challenge. Television remember no ten walk.\",\n    },\n    {\n        id: 15,\n        title: \"Harness 24/7 Mindshare\",\n        description:\n            \"Admit realize main risk within also include improve. Agent environment might mean information.\\nSay history recently.\",\n    },\n    {\n        id: 16,\n        title: \"Integrate One-To-One Metrics\",\n        description:\n            \"Study wind visit maybe what simple energy. Decide hear wait today outside interest issue.\\nRegion so stop. Put ball trouble beat. Ask soldier scene.\",\n    },\n    {\n        id: 17,\n        title: \"Engineer Seamless Technologies\",\n        description:\n            \"Person team gas ability. Live by agent idea when what soldier. On may defense individual.\",\n    },\n    {\n        id: 18,\n        title: \"E-Enable Dynamic Interfaces\",\n        description:\n            \"Know establish low accept four late.\\nTechnology interest south deep market. Response defense player throw.\\nEffort discuss son first then see. Senior science provide point hospital.\",\n    },\n    {\n        id: 19,\n        title: \"Maximize Integrated Schemas\",\n        description:\n            \"House close why every. Start home building friend system adult information. Team sea them actually. Professional suddenly push eye argue course and.\",\n    },\n    {\n        id: 20,\n        title: \"Whiteboard Distributed Applications\",\n        description:\n            \"Need second side yourself ever choose right hospital. Itself side add hard.\\nPeace third rest involve send. Note camera pass technology produce may. Bag himself memory issue daughter Republican.\",\n    },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
